buildscript {
    repositories {
        mavenCentral()
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url='https://repo.spongepowered.org/repository/maven-public' }
    }
    dependencies {
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'


version = '1.0.0'
group = 'dev.ghen.villagercomfort'

java {
    archivesBaseName = 'Villager Comfort'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}
compileJava {
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
}

minecraft {
    mappings channel: 'official', version: '1.18.2'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'villagercomfort'

            mods {
                villagercomfort {
                    source sourceSets.main
                }
            }
            arg "-mixin.config=villagercomfort.mixin.json"
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'villagercomfort'

            mods {
                villagercomfort {
                    source sourceSets.main
                }
            }
            arg "-mixin.config=villagercomfort.mixin.json"
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'villagercomfort'

            mods {
                villagercomfort {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'villagercomfort', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                villagercomfort {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://cursemaven.com"
    content {
        includeGroup "curse.maven"
    }
}
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.60'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    // implementation fg.deobf("curse.maven:jei-238222:3969092")
}

mixin {
    add sourceSets.main, "villagercomfort.refmap.json"
    config 'villagercomfort.mixin.json'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "villagercomfort",
                "Specification-Vendor"    : "villagercomfortsareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "villagercomfortsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "villagercomfort.mixin.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
